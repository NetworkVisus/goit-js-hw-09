{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,UA8B/B,SAASI,EAAcC,EAAUP,GAC/B,OAAO,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CACNF,WACAP,UAGFU,EAAO,CAAEH,WAAUP,S,GAEpBA,E,IAvCPe,QAAQC,IAAIjB,EAAKC,OAEjBD,EAAKM,KAAKY,iBAAiB,UAE3B,SAAwBC,GACtBA,EAAMC,iBAMN,IALA,IAAMC,EAAiBC,OAAOtB,EAAKK,OAAOkB,OACpCC,EAAgBF,OAAOtB,EAAKC,MAAMsB,OAClCE,EAAeH,OAAOtB,EAAKI,KAAKmB,OAClCG,EAAeF,EAEVG,EAAI,EAAGA,GAAKN,EAAgBM,GAAK,EACxCpB,EAAcoB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUP,EAAK4B,EAAL5B,MACjB6B,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANhC,EAAM,M,IAGjDiC,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUP,EAAK4B,EAAL5B,MAClB6B,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANhC,EAAM,M,IAGjDyB,GAAgBD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector('[name = delay]'),\n  step: document.querySelector('[name = step]'),\n  amount: document.querySelector('[name = amount]'),\n  form: document.querySelector('.form'),\n};\n\nconsole.log(refs.delay);\n\nrefs.form.addEventListener('submit', handleCreation);\n\nfunction handleCreation(event) {\n  event.preventDefault();\n  const amountToNumber = Number(refs.amount.value);\n  const delayToNumber = Number(refs.delay.value);\n  const stepToNumber = Number(refs.step.value);\n  let delayCounter = delayToNumber;\n\n  for (let i = 1; i <= amountToNumber; i += 1) {\n    createPromise(i, delayCounter)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayCounter += stepToNumber;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","form","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","addEventListener","event","preventDefault","amountToNumber","Number","value","delayToNumber","stepToNumber","delayCounter","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ccf1bbd8.js.map"}